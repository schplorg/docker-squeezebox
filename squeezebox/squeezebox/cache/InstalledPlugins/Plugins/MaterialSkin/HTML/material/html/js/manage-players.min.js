var PMGR_EDIT_GROUP_ACTION={cmd:"edit",icon:"edit"},PMGR_DELETE_GROUP_ACTION={cmd:"delete",icon:"delete"},PMGR_SYNC_ACTION={cmd:"sync",icon:"link"},PMGR_SETTINGS_ACTION={cmd:"settings",icon:"speaker"},PMGR_POWER_ON_ACTION={cmd:"on",icon:"power_settings_new",dimmed:!0},PMGR_POWER_OFF_ACTION={cmd:"off",icon:"power_settings_new",active:!0},PMGR_SLEEP_ACTION={cmd:"sleep",icon:"hotel"},PMGR_SET_DEF_PLAYER_ACTION={cmd:"sdp",icon:"check_box_outline_blank"},PMGR_UNSET_DEF_PLAYER_ACTION={cmd:"usdp",icon:"check_box",
active:!0},nameMap={};
Vue.component("lms-manage-players",{template:'\n<v-dialog v-model="show" v-if="show" scrollable fullscreen>\n <v-card>\n  <v-card-title class="settings-title">\n   <v-toolbar color="primary" dark app class="lms-toolbar">\n    <v-btn flat icon @click.native="close"><v-icon>arrow_back</v-icon></v-btn>\n    <v-toolbar-title>{{TB_MANAGE_PLAYERS.title}}</v-toolbar-title>\n   </v-toolbar>\n  </v-card-title>\n\n  <div class="ios-vcard-text-workaround">\n   <v-container grid-list-md class="pmgr-container">\n    <v-layout row wrap>\n     <div v-for="(player, index) in players" :key="player.id" style="width:100%">\n      <v-flex xs12 v-if="0==index && !player.isgroup && (manageGroups || players[players.length-1].isgroup)" class="pmgr-title ellipsis">{{i18n(\'Standard Players\')}}</v-flex>\n      <v-flex xs12 v-if="player.isgroup && (0==index || !players[index-1].isgroup)" class="pmgr-title pmgr-grp-title ellipsis">{{i18n(\'Group Players\')}}</v-flex>\n      <v-flex xs12>\n       <v-list class="pmgr-playerlist">\n        <v-list-tile>\n         <v-list-tile-avatar v-if="player.image" :tile="true" v-bind:class="{\'dimmed\': !player.ison}">\n          <img :key="player.image" v-lazy="player.image"></img>\n         </v-list-tile-avatar>\n         <v-list-tile-content>\n          <v-list-tile-title style="cursor:pointer" @click="setActive(player.id)"><v-icon small class="pmgr-radio">{{currentPlayer && currentPlayer.id==player.id ? \'radio_button_checked\' : \'radio_button_unchecked\'}}</v-icon>{{player.name}}<v-icon v-if="player.id==defaultPlayer" class="player-status-icon">check</v-icon><v-icon v-if="player.will_sleep_in" class="player-status-icon">hotel</v-icon><v-icon v-if="player.issyncmaster || player.syncmaster" class="player-status-icon" v-bind:class="{\'active-btn\': player.issyncmaster}">link</v-icon><i class="pmgr-synced-players" v-if="player.syncmaster">{{player | syncedPlayers}}</i></v-list-tile-title>\n          <v-list-tile-sub-title v-bind:class="{\'dimmed\': !player.ison}">{{player.track}}</v-list-tile-sub-title>\n         </v-list-tile-content>\n         <v-list-tile-action v-if="player.playIcon && showAllButtons" class="pmgr-btn pmgr-btn-control" @click="prevTrack(player)">\n          <v-btn icon><v-icon>skip_previous</v-icon></v-btn>\n         </v-list-tile-action>\n         <v-list-tile-action v-if="player.playIcon" class="pmgr-btn pmgr-btn-control" @click="playPause(player)">\n           <v-btn icon><v-icon>{{player.playIcon}}</v-icon></v-btn>\n         </v-list-tile-action>\n         <v-list-tile-action v-if="player.playIcon && showAllButtons && stopButton" class="pmgr-btn pmgr-btn-control" @click="stop(player)">\n           <v-btn icon><v-icon>stop</v-icon></v-btn>\n         </v-list-tile-action>\n         <v-list-tile-action v-if="player.playIcon && showAllButtons" class="pmgr-btn pmgr-btn-control" @click="nextTrack(player)">\n          <v-btn icon><v-icon>skip_next</v-icon></v-btn>\n         </v-list-tile-action>\n        </v-list-tile>\n       </v-list>\n      </v-flex xs12>\n       <v-flex xs12>\n       <v-layout>\n        <v-btn flat icon @click="volumeDown(player)" class="pmgr-btn" style="margin-left:2px"><v-icon>{{player.muted ? \'volume_off\' : \'volume_down\'}}</v-icon></v-btn>\n        <v-slider @change="volumeChanged(player)" step="1" v-model="player.volume" class="pmgr-vol-slider"></v-slider>\n        <v-btn flat icon @click="volumeUp(player)" class="pmgr-btn"><v-icon>{{player.muted ? \'volume_off\' : \'volume_up\'}}</v-icon></v-btn>\n        <p class="pmgr-vol">{{player.volume}}%</p>\n        <v-btn icon @click.stop="playerMenu(player, $event)" class="pmgr-btn"><v-icon>more_vert</v-icon></v-btn>\n       </v-layout>\n      </v-flex>\n      <v-flex xs12 v-if="!player.isgroup && index>0 && (index==players.length-1 || players[index+1].isgroup)"><v-btn flat class="pmgr-button" @click="sleepAll"><v-icon class="btn-icon">hotel</v-icon>{{i18n("Set sleep for all players")}}</v-btn></v-flex>\n      <v-flex xs12 v-if="!player.isgroup && index==players.length-1 && manageGroups" class="pmgr-title pmgr-grp-title ellipsis">{{i18n(\'Group Players\')}}</v-flex>\n      <v-flex xs12 v-if="manageGroups && index==players.length-1"><v-btn flat class="pmgr-button" @click="createGroup"><v-icon class="btn-icon">add_circle_outline</v-icon>{{i18n(\'Create group player\')}}</v-btn></v-flex>\n     </div>\n    </v-layout>\n   </v-container>\n  </div>\n  <div class="dialog-padding"></div>\n </v-card>\n\n <v-menu offset-y v-model="menu.show" :position-x="menu.x" :position-y="menu.y">\n  <v-list>\n   <template v-for="(action, index) in menu.actions">\n    <v-divider v-if="DIVIDER===action"></v-divider>\n    <v-list-tile v-else-if="PMGR_SYNC_ACTION!=action || multipleStandardPlayers" @click="playerAction(menu.player, action.cmd)">\n     <v-list-tile-avatar v-if="menuIcons"><v-icon v-bind:class="{\'dimmed\': action.dimmed, \'active-btn\': action.active}">{{action.icon}}</v-icon></v-list-tile-avatar>\n     <v-list-tile-title>{{action.title}}</v-list-tile-title>\n    </v-list-tile>\n   </template>\n  </v-list>\n </v-menu>\n</v-dialog>\n',props:[],
data:function(){return{show:!1,showAllButtons:!0,players:[],manageGroups:!1,menu:{show:!1,player:void 0,actions:[],x:0,y:0}}},mounted:function(){var a=this;this.noImage=resolveImageUrl(LMS_BLANK_COVER);bus.$on("manage.open",function(a){var b=this;this.players=[];this.show=!0;this.openDialogs=0;this.manageGroups=getLocalStorageBool("manageGroups",!1);lmsCommand("",["can","playergroups","items","?"]).then(function(a){(a=a.data)&&a.result&&void 0!=a.result._can&&1==a.result._can?lmsCommand("",["playergroups",
"can-manage"]).then(function(a){a=a.data;b.manageGroups=void 0!=a.result&&1==a.result["can-manage"];setLocalStorageVal("manageGroups",b.manageGroups)}).catch(function(a){b.manageGroups=!1;setLocalStorageVal("manageGroups",b.manageGroups)}):(b.manageGroups=!1,setLocalStorageVal("manageGroups",b.manageGroups))})}.bind(this));bus.$on("syncChanged",function(){this.updateAll()}.bind(this));this.showAllButtons=400<=window.innerWidth;this.$nextTick(function(){window.addEventListener("resize",function(){a.showAllButtons=
400<=window.innerWidth})});bus.$on("langChanged",function(){this.initItems()}.bind(this));this.initItems();bus.$on("esc",function(){this.menu.show?this.menu.show=!1:"manage"==this.$store.state.activeDialog&&(this.show=!1)}.bind(this));bus.$on("playerStatus",function(a){this.updatePlayer(a)}.bind(this));bus.$on("otherPlayerStatus",function(a){this.updatePlayer(a)}.bind(this));bus.$on("noPlayers",function(){this.show=!1}.bind(this));bus.$on("playersRemoved",function(a){if(this.show){for(var b=0,e=a.length;b<
e;++b)for(var d=0,f=this.players.length;d<f;++d)if(this.players[d].id==a[b]){this.players.splice(d,1);break}1>this.players.length&&(this.show=!1)}}.bind(this))},methods:{initItems:function(){PMGR_EDIT_GROUP_ACTION.title=i18n("Edit");PMGR_DELETE_GROUP_ACTION.title=i18n("Delete");PMGR_SYNC_ACTION.title=i18n("Synchronise");PMGR_SETTINGS_ACTION.title=i18n("Player settings");PMGR_POWER_ON_ACTION.title=i18n("Switch on");PMGR_POWER_OFF_ACTION.title=i18n("Switch off");PMGR_SLEEP_ACTION.title=i18n("Sleep");
PMGR_SET_DEF_PLAYER_ACTION.title=PMGR_UNSET_DEF_PLAYER_ACTION.title=i18n("Default player")},playerMenu:function(a,b){this.menu.actions=[PMGR_SYNC_ACTION,PMGR_SETTINGS_ACTION,a.ison?PMGR_POWER_OFF_ACTION:PMGR_POWER_ON_ACTION,PMGR_SLEEP_ACTION];this.menu.x=b.clientX;this.menu.y=b.clientY;this.menu.player=a;a.isgroup&&(this.menu.actions.push(DIVIDER),this.menu.actions.push(PMGR_EDIT_GROUP_ACTION),this.menu.actions.push(PMGR_DELETE_GROUP_ACTION));this.menu.actions.push(DIVIDER);this.menu.actions.push(a.id==
this.$store.state.defaultPlayer?PMGR_UNSET_DEF_PLAYER_ACTION:PMGR_SET_DEF_PLAYER_ACTION);this.menu.show=!0},createGroup:function(){!this.show||0<this.$store.state.visibleMenus.size||bus.$emit("dlg.open","group","create")},sleepAll:function(){!this.show||0<this.$store.state.visibleMenus.size||bus.$emit("dlg.open","sleep")},playerAction:function(a,b){PMGR_EDIT_GROUP_ACTION.cmd==b?bus.$emit("dlg.open","group","edit",a):PMGR_DELETE_GROUP_ACTION.cmd==b?this.deleteGroup(a):PMGR_SYNC_ACTION.cmd==b?bus.$emit("dlg.open",
"sync",a):PMGR_SETTINGS_ACTION.cmd==b?bus.$emit("dlg.open","playersettings",a):PMGR_POWER_ON_ACTION.cmd==b||PMGR_POWER_OFF_ACTION.cmd==b?this.togglePower(a):PMGR_SLEEP_ACTION.cmd==b?bus.$emit("dlg.open","sleep",a):PMGR_SET_DEF_PLAYER_ACTION.cmd==b?this.$store.commit("setDefaultPlayer",a.id):PMGR_UNSET_DEF_PLAYER_ACTION.cmd==b&&this.$store.commit("setDefaultPlayer",void 0)},close:function(){this.show=!1},i18n:function(a){return this.show?i18n(a):a},volumeDown:function(a){!this.show||0<this.$store.state.visibleMenus.size||
this.setVolume(a,adjustVolume(a.volume,!1))},volumeUp:function(a){!this.show||0<this.$store.state.visibleMenus.size||this.setVolume(a,adjustVolume(a.volume,!0))},setVolume:function(a,b){this.show&&lmsCommand(a.id,["mixer","volume",b]).then(function(c){a.volume=b})},volumeChanged:function(a){this.setVolume(a,a.volume)},togglePower:function(a){this.show&&lmsCommand(a.id,["power",a.ison?"0":"1"]).then(function(b){bus.$emit("refreshStatus",a.id)})},playPause:function(a){!this.show||0<this.$store.state.visibleMenus.size||
lmsCommand(a.id,a.isplaying?["pause","1"]:["play"]).then(function(b){bus.$emit("refreshStatus",a.id)})},stop:function(a){!this.show||0<this.$store.state.visibleMenus.size||lmsCommand(a.id,["stop"]).then(function(b){bus.$emit("refreshStatus",a.id)})},prevTrack:function(a){!this.show||0<this.$store.state.visibleMenus.size||lmsCommand(a.id,["button","jump_rew"]).then(function(b){bus.$emit("refreshStatus",a.id)})},nextTrack:function(a){!this.show||0<this.$store.state.visibleMenus.size||lmsCommand(a.id,
["playlist","index","+1"]).then(function(b){bus.$emit("refreshStatus",a.id)})},setActive:function(a){a!=this.$store.state.player.id&&0>=this.$store.state.visibleMenus.size&&this.$store.commit("setPlayer",a)},deleteGroup:function(a){var b=this;this.$confirm(i18n("Delete '%1'?",a.name),{buttonTrueText:i18n("Delete"),buttonFalseText:i18n("Cancel")}).then(function(c){c&&lmsCommand("",["playergroups","delete","id:"+a.id]).then(function(a){setTimeout(function(){bus.$emit("refreshServerStatus");setTimeout(function(){bus.$emit("refreshServerStatus")}.bind(this),
100)}.bind(b),250)})})},updatePlayer:function(a){if(this.show){nameMap[a.id]=a.name;a.image=void 0;a.current&&(a.current.artwork_url&&(a.image=resolveImageUrl(a.current.artwork_url)),void 0==a.image&&a.current.coverid&&(a.image=resolveImageUrl("/music/"+a.current.coverid+"/cover.jpg")),void 0==a.image&&(a.image=resolveImageUrl("/music/current/cover.jpg?player="+a.id)));void 0==a.image&&(a.image=this.noImage);a.playIcon=a.isplaying?this.$store.state.stopButton?"pause":"pause_circle_outline":this.$store.state.stopButton?
"play_arrow":"play_circle_outline";a.track=a.current.title?a.current.artist?a.current.title+SEPARATOR+a.current.artist:a.current.title:a.current.artist?a.current.artist:"...";for(var b=!1,c=0,e=this.players.length;c<e;++c)if(this.players[c].id==a.id){b=!0;this.$set(this.players,c,a);break}b||this.players.push(a);this.players.sort(playerSort)}}},computed:{currentPlayer:function(){return this.$store.state.player},defaultPlayer:function(){return this.$store.state.defaultPlayer},stopButton:function(){return this.$store.state.stopButton},
multipleStandardPlayers:function(){if(this.$store.state.players){var a=this.$store.state.players.length;return 1<a&&!this.$store.state.players[a-1].isgroup&&!this.$store.state.players[a-2].isgroup}return!1},menuIcons:function(){return this.$store.state.menuIcons}},filters:{syncedPlayers:function(a){for(var b=[],c=0,e=a.syncslaves.length;c<e;++c)if(a.syncslaves[c]!=a.id){var d=nameMap[a.syncslaves[c]];d&&b.push(d)}a.issyncmaster||(d=nameMap[a.syncmaster])&&b.push(d);b.sort();return b.join(", ")}},
watch:{show:function(a){this.$store.commit("dialogOpen",{name:"manage",shown:a});bus.$emit("subscribeAll",a)},"menu.show":function(a){this.$store.commit("menuVisible",{name:"manage",shown:a})}}});
