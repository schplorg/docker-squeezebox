#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1249312473',
        'name' => '/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 83 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    if ($stash->get('useExtJS')) {
#line 83 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # CAPTURE
    $stash->set('extJsScripts', do {
        my $output = '';
    $output .=  "\n<script TYPE=\"text/javascript\">\n	Ext.onReady(function() {	\n		";
#line 4 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $context->process('jsString', { 'id' => 'PLUGIN_EXTENSIONS_WARNING_POPUP' });
    $output .=  "\n		";
#line 5 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $context->process('jsString', { 'id' => 'PLUGIN_EXTENSIONS_WARNING_POPUP2' });
    $output .=  "\n		";
#line 6 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $context->process('jsString', { 'id' => 'PLUGIN_EXTENSIONS_WARNING_POPUP_OTHERREPO' });
    $output .=  "\n\n		Settings.Page.submit = function(ajax, cb) {\n\n			// display warning if user wants to install \"unsafe\" plugins from 3rd parties or add the other repo\n			var unsafe = Ext.query('input.unsafePlugin');\n			var other  = Ext.query('input.otherrepo');\n			var msg    = '';\n		\n			for (var i = 0; i < unsafe.length; i++) {\n				if (unsafe[i].checked)\n					msg += '<li>' + unsafe[i].value + '</li>';\n			}\n\n			if (msg > '') {\n				msg = SqueezeJS.string('plugin_extensions_warning_popup') \n						+ '<ul>' + msg + '</ul>' \n						+ SqueezeJS.string('plugin_extensions_warning_popup2');\n			}\n\n			if (other.length > 0) {\n				if (other[0].checked) {	\n					msg = SqueezeJS.string('plugin_extensions_warning_popup_otherrepo');\n				}\n			} \n	\n			if (msg > '') {\n				Ext.Msg.show({\n					title: SqueezeJS.string('settings'),\n					msg: msg,\n					width: 450,\n					closable: false,\n					buttons: Ext.Msg.OKCANCEL,\n					fn: function(btn) {\n						if (btn == 'ok') {\n							document.forms.settingsForm.submit();\n						}\n					}\n				});\n			}\n			\n			else {\n				document.forms.settingsForm.submit();\n			}\n		};\n	\n		var sortableTables = Ext.query('table.sortable');\n		\n		for (var i = 0; i < sortableTables.length; i++) {	\n		    // make the table sortable by header\n		    var grid = new SqueezeJS.UI.SortableTable(sortableTables[i]);\n		    grid.render();\n		    \n		    // allow the user to click anywher in the row to toggle the plugin\n		    grid.on({\n		    	cellclick: function(self, rowIndex, columnIndex, e) {\n		    		if (e && e.target) {\n		    			var el = Ext.get(e.target);\n		    			var row = el.up('tr')\n\n		    			// ...except on links\n		    			if (row && !el.dom.href) {\n		    				var cb = row.child('input');\n\n		    				// don't toggle the checkbox if we clicked it directly\n		    				if (cb && cb.id != el.id) {\n		    					cb.dom.checked = !cb.dom.checked;\n		    				}\n		    			}\n		    		}\n		    	}\n		    });\n		}\n\n		Settings.Page.initCollapsableItems();\n	});\n</script>\n";
        $output;
    });
    
    }
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
#line 119 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $context->process('settings/header.html');
    $output .=  "\n\n	<div class=\"settingsSmallIndention\">\n	";
#line 135 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    if ($stash->get(['updates', 0, 'size', 0]) > 0) {
    $output .=  "\n\n		";
#line 127 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			<div class=\"prefHead collapsableSection\" id=\"updatePlugins_Header\"><img class=\"disclosure_repos\" \n				src=\"";
#line 126 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/images/spacer.gif\"/>";
#line 126 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('getstring')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_EXTENSIONS_UPDATES';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</div>";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "	\n		";
#line 133 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			";
#line 132 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['updates', 0, 'sort', [ 'title' ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'plugin'} = $_tt_value;
    $output .=  "\n				";
#line 131 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $context->process('pluginDetails', { 'type' => 'update' });
    $output .=  "\n			";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
        $context->include('pluginGroup', { 'id' => 'updatePlugins', 'content', $output }); 
    };
    
    $output .=  "\n	";
    }
    
    $output .=  " \n\n	";
#line 140 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<div class=\"prefHead collapsableSection\" id=\"activePlugins_Header\"><img class=\"disclosure_repos\" \n			src=\"";
#line 139 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/images/spacer.gif\"/>";
#line 139 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('getstring')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_EXTENSIONS_ACTIVE';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</div>";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "	\n	";
#line 146 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		";
#line 145 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['active', 0, 'sort', [ 'title' ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'plugin'} = $_tt_value;
    $output .=  "\n			";
#line 144 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $context->process('pluginDetails', { 'type' => 'enabled' });
    $output .=  "\n		";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
        $context->include('pluginGroup', { 'id' => 'activePlugins', 'content', $output }); 
    };
    
    $output .=  "\n	";
#line 151 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<div class=\"prefHead collapsableSection\" id=\"inactivePlugins_Header\"><img class=\"disclosure_repos\" \n			src=\"";
#line 150 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/images/spacer.gif\"/>";
#line 150 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('getstring')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_EXTENSIONS_INACTIVE';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</div>";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "	\n	";
#line 157 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		";
#line 156 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['inactive', 0, 'sort', [ 'title' ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'plugin'} = $_tt_value;
    $output .=  "\n			";
#line 155 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $context->process('pluginDetails', { 'type' => 'disabled' });
    $output .=  "\n		";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
        $context->include('pluginGroup', { 'id' => 'inactivePlugins', 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 173 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('avail');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'repo'} = $_tt_value;
    $output .=  "\n\n		";
#line 165 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			<div class=\"prefHead collapsableSection\" id=\"otherPlugins";
#line 163 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "_Header\"><img class=\"disclosure_repos\" \n				src=\"";
#line 164 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/images/spacer.gif\"/>";
#line 164 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $stash->get(['repo', 0, 'title', 0]);
    $output .=  "</div>";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "	\n		";
#line 171 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			";
#line 170 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['repo', 0, 'entries', 0, 'sort', [ 'title' ]]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'plugin'} = $_tt_value;
    $output .=  "\n				";
#line 169 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $context->process('pluginDetails', { 'type' => ($stash->get(['repo', 0, 'weight', 0]) eq 1 ? 'safe' : 'unsafe') });
    $output .=  "\n			";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
        $context->include('pluginGroup', { 'id' => 'otherPlugins'  . $stash->get(['loop', 0, 'index', 0]), 'content', $output }); 
    };
    
    $output .=  "		";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "	</div>\n\n	";
#line 178 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<input type=\"checkbox\" name=\"auto\" id=\"auto\" ";
#line 177 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    if ($stash->get('auto')) {
    $output .=  " checked=\"1\" ";
    }
    
    $output .=  " />\n	";
        $context->include('setting', { 'title' => 'PLUGIN_EXTENSIONS_AUTO', 'desc' => 'PLUGIN_EXTENSIONS_AUTO_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 189 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<div>";
#line 181 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_EXTENSIONS_REPOS_DESC';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</div>\n		<div>";
#line 182 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PLUGIN_EXTENSIONS_REPOS_WARNING';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</div>\n\n		<div>\n		";
#line 187 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('repos');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'entry'} = $_tt_value;
    $output .=  "\n			<br/><input type=\"text\" class=\"stdedit\" name=\"repos\" id=\"repos\" value=\"";
#line 186 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $stash->get('entry');
    $output .=  "\" size=\"60\" />\n		";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n		</div>\n	";
        $context->include('setting', { 'title' => 'PLUGIN_EXTENSIONS_REPOS', 'desc' => '', 'content', $output }); 
    };
    
    $output .=  "\n\n	<input name=\"rand\" type=\"hidden\" value=\"";
#line 191 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $stash->get('rand');
    $output .=  "\" />\n\n";
#line 193 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
    $output .=  $context->process('settings/footer.html');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'pluginGroup' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	<div class=\"settingSection\" style=\"margin-top:0;margin-bottom:20px\" id=\"";
#line 85 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get('id');
        $output .=  "\">\n		<table class=\"sortable\" width=\"100%\">\n			<thead><tr>\n				<th width=\"5%\"  class=\"sortable\">";
#line 88 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        if ($stash->get('type') eq 'update') {
#line 88 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'UPDATE';
            
            &$_tt_filter($output);
        };
        
        }
        else {
#line 88 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'ENABLE';
            
            &$_tt_filter($output);
        };
        
        }
        
        $output .=  "</th>\n				<th width=\"20%\" class=\"sortable\">";
#line 89 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'NAME';
            
            &$_tt_filter($output);
        };
        
        $output .=  "</th>\n				<th width=\"50%\" class=\"sortable\">";
#line 90 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'DESCRIPTION';
            
            &$_tt_filter($output);
        };
        
        $output .=  "</th>\n				<th width=\"15%\" class=\"sortable\">";
#line 91 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'PLUGIN_EXTENSIONS_AUTHOR';
            
            &$_tt_filter($output);
        };
        
        $output .=  "</th>\n				<th width=\"10%\" class=\"sortable\">";
#line 92 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        if ($stash->get('type') eq 'update') {
#line 92 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'INFORMATION_VERSION';
            
            &$_tt_filter($output);
        };
        
        }
        
        $output .=  "</th>\n			</tr></thead>\n			<tbody>\n			";
#line 95 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get('content');
        $output .=  "\n			</tbody>\n		</table>\n	</div>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'pluginDetails' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	<tr>\n		<td><input name=\"";
#line 102 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get('type') eq 'update' ? 'update:'  . $stash->get(['plugin', 0, 'name', 0]) : $stash->get(['plugin', 0, 'name', 0]);
        $output .=  "\" ";
#line 102 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'enforce', 0]) ? 'disabled' : '';
        $output .=  " ";
#line 102 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get('type') eq 'enabled' && ! $stash->get(['plugin', 0, 'error', 0]) ? 'checked=checked' : '';
        $output .=  " type=\"checkbox\" value=\"";
#line 102 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'title', 0]);
        $output .=  "\" ";
#line 102 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        if ($stash->get('type') eq 'unsafe') {
        $output .=  "class=\"unsafePlugin\"";
        }
        
        $output .=  " />\n		";
#line 105 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        if ($stash->get('type') ne 'update') {
        $output .=  "\n			<input name=\"";
#line 104 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        if ($stash->get(['plugin', 0, 'manual', 0])) {
        $output .=  "manual";
        }
        else {
        $output .=  "install";
        }
        
        $output .=  ":";
#line 104 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'name', 0]);
        $output .=  "\" type=\"hidden\" />&nbsp;\n		";
        }
        
        $output .=  "\n		</td>\n		<td>";
#line 107 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'title', 0]);
#line 107 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        if ($stash->get('type') eq 'enabled') {
        $output .=  " (v";
#line 107 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'version', 0]);
        $output .=  ")";
        }
        
        $output .=  "&nbsp;</td>\n		<td>";
#line 108 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html_line_break')
                      || $context->throw($context->error);
        
        $output .=  (($stash->get(['plugin', 0, 'error', 0]) && '<b>'  . $stash->get(['plugin', 0, 'error', 0])  . '</b>') || ($stash->get('type') eq 'update' && $stash->get(['plugin', 0, 'changes', 0])) || $stash->get(['plugin', 0, 'desc', 0]));
            
            &$_tt_filter($output);
        };
        
        $output .=  "&nbsp;</td>\n		<td>\n			<span style=\"display:none\">";
#line 110 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'creator', 0]) || $stash->get(['plugin', 0, 'email', 0]) || $stash->get(['plugin', 0, 'homepage', 0]);
        $output .=  "&nbsp;</span>\n			";
#line 111 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        if ($stash->get(['plugin', 0, 'email', 0])) {
        $output .=  "<a href=\"mailto:";
#line 111 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'email', 0]);
        $output .=  "\">";
        }
        elsif ($stash->get(['plugin', 0, 'homepage', 0])) {
        $output .=  "<a href=\"";
#line 111 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'homepage', 0]);
        $output .=  "\" target=\"_blank\">";
        }
        
#line 111 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'creator', 0]) || $stash->get(['plugin', 0, 'email', 0]);
#line 111 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        if ($stash->get(['plugin', 0, 'email', 0]) || $stash->get(['plugin', 0, 'homepage', 0])) {
        $output .=  "</a>";
        }
        
        $output .=  "&nbsp;\n		</td>\n		<td>\n			";
#line 116 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        if ($stash->get('type') eq 'update') {
#line 114 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'version', 0]);
        $output .=  "\n			";
        }
        elsif ($stash->get(['plugin', 0, 'settings', 0])) {
        $output .=  "<a href=\"";
#line 115 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'settings', 0]);
        $output .=  "\">";
#line 115 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'SETTINGS';
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>\n			";
        }
        elsif ($stash->get(['plugin', 0, 'link', 0])) {
        $output .=  "<a href=\"";
#line 116 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        $output .=  $stash->get(['plugin', 0, 'link', 0]);
        $output .=  "\" target=\"plugin_desc\">";
#line 116 "/usr/share/perl5/Slim/Plugin/Extensions/HTML/EN/plugins/Extensions/settings/basic.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'MOREINFO';
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>";
        }
        
        $output .=  "&nbsp;</td>\n	</tr>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
