#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'name' => 'cmdwrappers',
        'modtime' => '1249312473',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 395 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('null')
                  || $context->throw($context->error);
    
    $output .=  "\n\n";
    $output .=  "\n";
#line 4 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('statusroot', 'status.html');
    $output .=  "\n\n";
    $output .=  "\n";
#line 7 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('noHomeLink', 0);
    $output .=  "\n\n";
    $output .=  "\n";
#line 10 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('crumbSeparator', '/');
    $output .=  "\n\n";
    $output .=  "\n";
#line 13 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('setting_chooser_noHome', 0);
    $output .=  "\n\n";
    $output .=  "\n";
#line 16 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('controlGraphics', 0);
    $output .=  "\n\n";
    $output .=  "\n";
#line 19 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('browserTarget', 'browser');
    $output .=  "\n\n";
    $output .=  "\n";
#line 22 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('useAJAX', 1);
    $output .=  "\n\n";
    $output .=  "\n";
#line 25 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('useExtJS', 0);
    $output .=  "\n\n";
    $output .=  "\n";
#line 28 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('bgcolor', '');
    $output .=  "\n\n";
    $output .=  "\n";
#line 31 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('resizeParam', 'p');
    $output .=  "\n\n";
    $output .=  "\n";
#line 34 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
    $stash->set('cmdLinkIconSize', 13);
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    
    
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n\n";
    $output .=  "\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
    
    $output .=  "\n";
        
        &$_tt_filter($output);
    };
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'crumblistitem' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 157 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['item', 0, 'exists', [ 'title' ]])) {
        $output .=  "<a ";
#line 0 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process(($stash->get(['item', 0, 'hreftype', 0]) . "ItemHRef"));
        $output .=  ">";
#line 154 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('replace', [ '^\s*/', '' ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['item', 0, 'title', 0]);
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>";
        }
        else {
#line 156 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('replace', [ '^\s*/', '' ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('item');
            
            &$_tt_filter($output);
        };
        
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'helpTopic' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	<li><a href=\"";
#line 366 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('href');
        $output .=  "\"";
#line 366 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('target')) {
        $output .=  " target=\"";
#line 366 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('target');
        $output .=  "\"";
        }
        
        $output .=  ">";
#line 366 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('title');
        $output .=  "</a></li>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'playlistcontrols' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "	";
#line 224 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
#line 224 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdHRef', { 'cmdType' => 'jump', 'num' => $stash->get(['item', 0, 'num', 0]) });
            $context->include('playlink', { 'content', $output }); 
        };
        
        $output .=  "\n	";
#line 225 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
#line 225 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdHRef', { 'cmdType' => 'delete' });
            $context->include('removelink', { 'content', $output }); 
        };
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'albuminfo' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	<a ";
#line 298 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('albumItemHRef');
        $output .=  " target=\"browser\" class=\"browseItemLink\">";
#line 298 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['item', 0, 'text', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>\n\n	";
#line 302 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['item', 0, 'showYear', 0])) {
        $output .=  "\n		<a ";
#line 301 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('yearItemHRef');
        $output .=  " class=\"browseItemLink\">(";
#line 301 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['item', 0, 'year', 0]);
        $output .=  ")</a>\n	";
        }
        
        $output .=  "\n	\n	";
#line 304 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['item', 0, 'includeArtist', 0]) && $stash->set('artist', $stash->get(['item', 0, 'artistsWithAttributes', 0]) ? $stash->get(['item', 0, 'artistsWithAttributes', 0, 0, 0]) : $stash->get(['item', 0, 'itemobj', 0, 'artist', 0])) && $stash->get(['artist', 0, 'name', 0]) ne $stash->get(['item', 0, 'noArtist', 0])) {
#line 304 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('artistsAsHTML.html', { 'itemobj' => $stash->get(['item', 0, 'itemobj', 0]) });
        }
        
        $output .=  "\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'contentitem' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "<div class=\"";
#line 179 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('odd') ? 'odd' : 'even';
        $output .=  "\">";
#line 182 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('anchor')) {
        $output .=  "\n		<a name=\"";
#line 181 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('uri')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('anchor');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\"></a>";
        }
        
        $output .=  "	\n	<div class=\"";
#line 184 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('lineclass') || 'browsedbListItem';
        $output .=  "\">";
#line 189 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('leftcontrols')) {
        $output .=  "			<span class=\"browsedbLeftControls\">";
#line 187 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process($stash->get('leftcontrols'));
        $output .=  "			</span>";
        }
        
#line 190 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('indent', [ 4 ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('content');
            
            &$_tt_filter($output);
        };
        
#line 199 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('rightcontrols')) {
        $output .=  "			<span class=\"browsedbRightControls\">";
#line 193 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process($stash->get('rightcontrols'));
        $output .=  "			</span>";
        }
        elsif ($stash->get('controls')) {
        $output .=  "			<div class=\"browsedbControls\">";
#line 197 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process($stash->get('controls'));
        $output .=  "			</div>";
        }
        
        $output .=  "\n	</div>\n</div>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'moveuplink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 122 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdlink', { 'cmdtitle' => 'MOVEUP', 'cmdimage' => 'b_up.gif' });
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'dummylink' => sub { return '' },
        'favoritescontrol' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 266 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if (($stash->get('useAJAX') || $stash->get('useExtJS')) && ($stash->get(['item', 0, 'isFavorite', 0, 'defined', 0]) || $stash->get(['isFavorite', 0, 'defined', 0]))) {
#line 258 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['item', 0, 'isFavorite', 0]) || $stash->get('isFavorite')) {
#line 258 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $stash->set('linktype', 'favdellink');
        }
        else {
#line 258 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $stash->set('linktype', 'favaddlink');
        }
        
#line 266 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
#line 266 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if (! $stash->get('ajaxRequest')) {
        $output .=  "href=\"javascript:void(0);\" onClick=\"";
#line 266 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('useExtJS')) {
#line 266 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  'SqueezeJS.Utils.';
        }
        
        $output .=  "toggleFavorite(this, '";
#line 266 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('replace', [ '\'', '%27' ])
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('uri')
                      || $context->throw($context->error);
        
        $output .=  ($stash->get(['itemobj', 0, 'url', 0]) || $stash->get(['item', 0, 'url', 0]));
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "', '";
#line 266 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('replace', [ '\'', '%27' ])
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('uri')
                      || $context->throw($context->error);
        
        $output .=  ($stash->get(['item', 0, 'text', 0]) || $stash->get(['item', 0, 'title', 0]) || $stash->get(['itemobj', 0, 'title', 0]) || $stash->get(['item', 0, 'name', 0]));
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "')\"";
        }
        
            $context->include($stash->get('linktype'), { 'noTarget' => 1, 'content', $output }); 
        };
        
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'homelink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 116 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  ('' . "<a href=\"");
#line 116 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('webroot');
#line 0 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  ("home.html?player=" . $stash->get('playerURI') . "\"");
#line 0 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('target')) {
#line 0 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  ('' . "target=\"");
#line 0 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get($stash->get('target'));
#line 0 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  ('' . "\"");
        }
        
#line 0 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  '>';
#line 0 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('img') || $stash->get('stringHOME');
#line 0 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  '</a>';
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'settingGroup' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	<div class=\"settingGroup\">\n		";
#line 378 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('title') && $stash->get('simple')) {
        $output .=  "<p><b>";
#line 377 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('getstring')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('title');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</b></p>\n		";
        }
        elsif ($stash->get('title')) {
        $output .=  "<div class=\"prefHead\">";
#line 378 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('getstring')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('title');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</div>";
        }
        
        $output .=  "\n		";
#line 379 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('desc') && ! $stash->get('simple')) {
        $output .=  "<div class=\"prefDesc hiddenDesc\">";
#line 379 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('getstring')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('desc');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</div>";
        }
        
        $output .=  "\n		<div class=\"prefs\">";
#line 380 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('content');
        $output .=  "&nbsp;</div>\n	</div>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'trackinfo' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	";
#line 273 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['item', 0, 'currentsong', 0])) {
#line 273 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $stash->set(['item', 0, 'noHref', 0], 1);
        $output .=  "<b>";
        }
        
        $output .=  "\n	\n	";
#line 288 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['item', 0, 'infohref', 0])) {
        $output .=  "\n			<a ";
#line 276 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['item', 0, 'infohref', 0]);
        $output .=  " target=\"browser\" class=\"browseItemLink\">";
#line 276 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  ($stash->get(['item', 0, 'text', 0]) || $stash->get(['item', 0, 'title', 0]));
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>\n	";
        }
        elsif ($stash->get(['item', 0, 'num', 0]) || $stash->get(['item', 0, 'num', 0]) eq 0) {
        $output .=  "\n			";
#line 278 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if (!($stash->get(['item', 0, 'noHref', 0]))) {
        $output .=  "<a ";
#line 278 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('songinfoItemHRef');
        $output .=  " target=\"browser\">";
        }
        
        $output .=  "\n			";
#line 279 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['item', 0, 'title', 0]);
            
            &$_tt_filter($output);
        };
        
#line 279 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if (!($stash->get(['item', 0, 'noHref', 0]))) {
        $output .=  "</a>";
        }
        
        $output .=  "\n	";
        $output .=  "\n	";
        $output .=  "\n	";
        }
        elsif ($stash->get(['item', 0, 'item', 0]) || ! $stash->get(['item', 0, 'defined', [ 'level' ]]) && $stash->get(['item', 0, 'itemobj', 0])) {
        $output .=  "\n		<a ";
#line 283 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('songinfoItemHRef');
        $output .=  " target=\"browser\" class=\"browseItemLink\">";
#line 283 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['item', 0, 'text', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>\n	";
        }
        elsif ($stash->get(['item', 0, 'songtitle', 0])) {
        $output .=  "\n		<a ";
#line 285 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('songinfoItemHRef');
        $output .=  " target=\"browser\" class=\"browseItemLink\">";
#line 285 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['item', 0, 'songtitle', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>\n	";
        }
        else {
        $output .=  "\n		";
#line 287 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['item', 0, 'text', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n	";
        }
        
        $output .=  "\n	\n	";
#line 290 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['item', 0, 'includeArtist', 0]) && $stash->set('artist', $stash->get(['item', 0, 'artistsWithAttributes', 0]) ? $stash->get(['item', 0, 'artistsWithAttributes', 0, 0, 0]) : $stash->get(['item', 0, 'itemobj', 0, 'artist', 0])) && $stash->get(['artist', 0, 'name', 0]) ne $stash->get(['item', 0, 'noArtist', 0])) {
#line 290 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('artistsAsHTML.html', { 'itemobj' => $stash->get(['item', 0, 'itemobj', 0]) });
        }
        
        $output .=  "\n	\n	";
#line 293 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['item', 0, 'includeAlbum', 0]) && $stash->set('albumTitle', $stash->get(['item', 0, 'albumTitle', 0]) || ($stash->get(['item', 0, 'itemobj', 0, 'album', 0]) && $stash->get(['item', 0, 'itemobj', 0, 'album', 0, 'title', 0]))) && $stash->get('albumTitle') ne $stash->get(['item', 0, 'noAlbum', 0]) && $stash->get('albumTitle') ne '') {
#line 292 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('stringFROM');
        $output .=  "\n	<a ";
#line 293 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('albumItemHRef');
        $output .=  " target=\"browser\" class=\"browseItemLink\">";
#line 293 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('albumTitle');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>";
        }
        
        $output .=  "\n	";
#line 294 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['item', 0, 'currentsong', 0])) {
        $output .=  "</b>";
        }
        
        $output .=  "\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'movedownlink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 129 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdlink', { 'cmdtitle' => 'MOVEDOWN', 'cmdimage' => 'b_down.gif' });
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'helpTopicList' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n<ul style=\"direction: ltr;\">\n	";
#line 361 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('content');
        $output .=  "</ul>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'insertlink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 67 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdlink', { 'cmdtitle' => 'PLAY_NEXT', 'cmdimage' => 'b_queue.gif' });
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'removelink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 85 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdlink', { 'cmdtitle' => 'REMOVE_FROM_PLAYLIST', 'cmdimage' => 'b_delete.gif' });
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'scanwarning' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n<b>";
#line 136 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'NOTE';
            
            &$_tt_filter($output);
        };
        
        $output .=  "</b> ";
#line 136 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'SCAN_WARNING';
            
            &$_tt_filter($output);
        };
        
#line 139 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('audiodir')) {
#line 138 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'SCAN_CLICK';
            
            &$_tt_filter($output);
        };
        
        
        $output .=  "<a href=\"browsetree.html?level=0&amp;player=";
#line 138 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('playerURI');
        $output .=  "\">";
#line 138 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'HERE';
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>.";
        }
        
        $output .=  "\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'crumblist' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 144 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if (! $stash->get('noHomeLink')) {
#line 144 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('homelink');
        }
        
#line 148 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['pwd_list', 0, 'list', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        LOOP:   while (! $_tt_error) {
                    $stash->{'item'} = $_tt_value;
#line 146 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if (! $stash->get('noHomeLink') || ! $stash->get(['loop', 0, 'first', 0])) {
        $output .=  " ";
#line 146 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('crumbSeparator');
        $output .=  " ";
        }
        
#line 147 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('crumblistitem');;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'morelink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 73 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdlink', { 'cmdtitle' => 'MORE', 'cmdimage' => 'b_mmmix.gif' });
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'favaddlink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 60 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdlink', { 'cmdtitle' => 'PLUGIN_FAVORITES_ADD', 'cmdimage' => 'b_favorite.gif' });
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'songInfoItem' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	<div id=\"";
#line 321 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('title');
        $output .=  "\">\n		<span class=\"songInfoTitle\">\n			";
#line 323 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('title')) {
#line 323 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('title');
            
            &$_tt_filter($output);
        };
        
#line 323 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('stringCOLON');
        }
        
        $output .=  "\n		</span>\n		<span class=\"songInfoText\">";
#line 325 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('item');
        $output .=  "</span>\n	</div>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'favdellink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 92 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdlink', { 'cmdtitle' => 'PLUGIN_FAVORITES_REMOVE', 'cmdimage' => 'b_favorite_remove.gif' });
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'radiocontrols' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	";
#line 251 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $stash->set('class', $stash->get('odd') ? 'odd" bgcolor="#d0d0d0' : 'even" bgcolor="#FFFFFF');
        $stash->set('target', 'status');
        $output .=  "\n	";
#line 252 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $stash->set('header', '1');
        $stash->set('width', $stash->get('cmdLinkIconSize'));
        $stash->set('height', $stash->get('cmdLinkIconSize'));
        $output .=  "\n	";
#line 253 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
#line 253 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdHRef', { 'cmdType' => 'play' });
            $context->include('playlink', { 'content', $output }); 
        };
        
        $output .=  "\n	";
#line 254 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
#line 254 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdHRef', { 'cmdType' => 'add' });
            $context->include('addlink', { 'content', $output }); 
        };
        
        $output .=  "\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'editlink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 99 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdlink', { 'cmdtitle' => 'EDIT', 'cmdimage' => 'b_edit.gif' });
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'descendlink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "<a ";
#line 80 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('content');
        $output .=  ">";
#line 80 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('stringNEXT');
        $output .=  "</a>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'songInfoPlayLinks' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	<div id=\"songInfoPlayLinks\">\n		";
#line 316 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('browsecontrols');
        $output .=  "\n	</div>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'pagebar' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 332 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if (! $stash->get(['pageinfo', 0, 'alphamap', 0])) {
#line 332 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('pagebarcalc', { 'pagesperbar' => 15 });
        }
        
        $output .=  "\n<div class=\"pagebar\">\n";
#line 334 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('pagesstart')) {
        $output .=  "  <a href=\"";
#line 334 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['pageinfo', 0, 'path', 0]);
        $output .=  "?start=0";
#line 334 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['pageinfo', 0, 'otherparams', 0]);
            
            &$_tt_filter($output);
        };
        
#line 334 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('sess')) {
        $output .=  "&amp;sess=";
#line 334 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('sess');
        }
        
        $output .=  "\">";
#line 334 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('stringFIRST');
        $output .=  "</a> ";
        }
        
        $output .=  "\n";
#line 335 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('pageprev') || $stash->get('pageprev') eq '0') {
        $output .=  " <a href=\"";
#line 335 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['pageinfo', 0, 'path', 0]);
        $output .=  "?start=";
#line 335 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('pageprev');
#line 335 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['pageinfo', 0, 'otherparams', 0]);
            
            &$_tt_filter($output);
        };
        
#line 335 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('sess')) {
        $output .=  "&amp;sess=";
#line 335 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('sess');
        }
        
        $output .=  "\">";
#line 335 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('stringPREVIOUS');
        $output .=  "</a> ";
        }
        
#line 347 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['pageinfo', 0, 'alphamap', 0])) {
#line 340 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = $stash->get(['pageinfo', 0, 'alphaindex', 0]);
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        LOOP:   while (! $_tt_error) {
                    $stash->{'alphakey'} = $_tt_value;
#line 338 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $stash->set('curpage', ($stash->get(['pageinfo', 0, 'alphamap', 0, 'item', [ $stash->get('alphakey') ]]) eq $stash->get(['pageinfo', 0, 'startitem', 0])));
        $output .=  " <a href=\"";
#line 339 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['pageinfo', 0, 'path', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "?start=";
#line 339 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['pageinfo', 0, 'alphamap', 0, 'item', [ $stash->get('alphakey') ]]);
#line 339 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['pageinfo', 0, 'otherparams', 0]);
            
            &$_tt_filter($output);
        };
        
#line 339 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('sess')) {
        $output .=  "&amp;sess=";
#line 339 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('sess');
        }
        
        $output .=  "#";
#line 339 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('uri')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('alphakey');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\">";
#line 339 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('curpage')) {
        $output .=  "<b>";
        }
        
#line 339 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('alphakey');
            
            &$_tt_filter($output);
        };
        
#line 339 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('curpage')) {
        $output .=  "</b>";
        }
        
        $output .=  "</a> ";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        }
        else {
#line 346 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FOREACH 
        do {
            my ($_tt_value, $_tt_error, $_tt_oldloop);
            my $_tt_list = [ $stash->get('pagebarstart')..$stash->get('pagebarend') ];
            
            unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
                $_tt_list = Template::Config->iterator($_tt_list)
                    || die $Template::Config::ERROR, "\n"; 
            }
        
            ($_tt_value, $_tt_error) = $_tt_list->get_first();
            eval { $_tt_oldloop = $stash->get('loop') };
            $stash->set('loop', $_tt_list);
            eval {
        LOOP:   while (! $_tt_error) {
                    $stash->{'ind'} = $_tt_value;
#line 345 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('ind') eq $stash->get(['pageinfo', 0, 'currentpage', 0])) {
        $output .=  " <b>";
#line 343 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('ind') + 1;
        $output .=  "</b> ";
        }
        else {
        $output .=  " <a href=\"";
#line 344 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['pageinfo', 0, 'path', 0]);
            
            &$_tt_filter($output);
        };
        
        $output .=  "?start=";
#line 344 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('ind') * $stash->get(['pageinfo', 0, 'itemsperpage', 0]);
#line 344 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['pageinfo', 0, 'otherparams', 0]);
            
            &$_tt_filter($output);
        };
        
#line 344 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('sess')) {
        $output .=  "&amp;sess=";
#line 344 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('sess');
        }
        
        $output .=  "\">";
#line 344 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('ind') + 1;
        $output .=  "</a> ";
        }
        
        $output .=  "\n";;
                    ($_tt_value, $_tt_error) = $_tt_list->get_next();
                }
            };
            $stash->set('loop', $_tt_oldloop);
            die $@ if $@;
            $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
            die $_tt_error if $_tt_error;
        };
        
        }
        
        $output .=  "\n";
#line 348 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('pagenext')) {
        $output .=  " <a href=\"";
#line 348 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['pageinfo', 0, 'path', 0]);
        $output .=  "?start=";
#line 348 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('pagenext');
#line 348 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['pageinfo', 0, 'otherparams', 0]);
            
            &$_tt_filter($output);
        };
        
#line 348 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('sess')) {
        $output .=  "&amp;sess=";
#line 348 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('sess');
        }
        
        $output .=  "\">";
#line 348 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('stringNEXT');
        $output .=  "</a> ";
        }
        
        $output .=  "\n";
#line 349 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('pagesend')) {
        $output .=  " <a href=\"";
#line 349 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['pageinfo', 0, 'path', 0]);
        $output .=  "?start=";
#line 349 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('pagesend');
#line 349 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('html')
                      || $context->throw($context->error);
        
        $output .=  $stash->get(['pageinfo', 0, 'otherparams', 0]);
            
            &$_tt_filter($output);
        };
        
#line 349 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('sess')) {
        $output .=  "&amp;sess=";
#line 349 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('sess');
        }
        
        $output .=  "\">";
#line 349 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('stringLAST');
        $output .=  "</a> ";
        }
        
        $output .=  "\n</div>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'galleryitem' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n<li>\n	<div style=\"width:";
#line 206 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['item', 0, 'size', 0]);
        $output .=  "px;\">\n		<div class=\"artworkImage\" style=\"width: ";
#line 207 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['item', 0, 'size', 0]);
        $output .=  ";\">\n			<div style=\"width:";
#line 208 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['item', 0, 'size', 0]);
        $output .=  "px;height:";
#line 208 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['item', 0, 'size', 0]);
        $output .=  "px;overflow:hidden;\">\n				";
#line 0 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('thumbnailItemImg', { 'height' => ('' . $stash->get(['item', 0, 'size', 0])) });
        $output .=  "\n			</div>\n		</div>\n\n		";
#line 213 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $stash->set('class', 'even');
        $stash->set('odd', 0);
        $output .=  "\n\n		<div class=\"artworkText\" style=\"width:";
#line 215 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['item', 0, 'size', 0]);
        $output .=  "px;\"><span style=\"width:";
#line 215 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['item', 0, 'size', 0]);
        $output .=  "px;\">";
#line 216 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('indent', [ 4 ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('content');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n		</span></div>\n	</div>\n</li>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'listitem' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	<td width=\"100%\" ";
#line 106 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('odd')) {
        $output .=  "class=\"odd\" bgcolor=\"#d0d0d0\"";
        }
        else {
        $output .=  "class=\"even\" bgcolor=\"#FFFFFF\"";
        }
        
        $output .=  ">\n		";
#line 111 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('content') eq '') {
        $output .=  "\n			";
#line 108 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('title');
        $output .=  "		\n		";
        }
        else {
        $output .=  "\n			<a ";
#line 110 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('content');
        $output .=  " >";
#line 110 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('title');
        $output .=  "</a>\n		";
        }
        
        $output .=  "\n	</td>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'iteminfo' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 307 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get(['item', 0, 'levelName', 0]) eq 'album') {
#line 307 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('albuminfo');
        }
        else {
#line 307 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('trackinfo');
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'settingSection' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	<div class=\"settingSection\" ";
#line 370 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('sectionID')) {
        $output .=  "id=\"";
#line 370 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('sectionID');
        $output .=  "\"";
        }
        
        $output .=  "  ";
#line 370 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('customStyle')) {
        $output .=  "style=\"";
#line 370 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('customStyle');
        $output .=  "\"";
        }
        
        $output .=  ">\n		";
#line 371 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('content');
        $output .=  "\n	</div>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'dummycontainer' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n<div>";
#line 174 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('indent', [ 4 ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('content');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n</div>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'jsString' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	strings['";
#line 393 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('jsId')) {
#line 393 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('jsId');
        }
        else {
#line 393 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('lower')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('id');
            
            &$_tt_filter($output);
        };
        
        }
        
        $output .=  "'] = \"";
#line 393 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('replace', [ '"', '\"' ])
                      || $context->throw($context->error);
        
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('id');
            
            &$_tt_filter($output);
        };
        
            
            &$_tt_filter($output);
        };
        
        $output .=  "\";\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'cmdlink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "<a ";
#line 37 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('content');
        $output .=  " ";
#line 37 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if (!($stash->get('noTarget'))) {
        $output .=  "target=\"status\"";
        }
        
        $output .=  ">";
#line 37 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('cmdtitle');
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'pagebarheader' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n<span class=\"pagebarheadertext\">\n";
#line 355 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'ITEMS';
            
            &$_tt_filter($output);
        };
        
        $output .=  " ";
#line 355 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['pageinfo', 0, 'startitem', 0]);
        $output .=  " ";
#line 355 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'TO';
            
            &$_tt_filter($output);
        };
        
        $output .=  " ";
#line 355 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['pageinfo', 0, 'enditem', 0]);
        $output .=  " ";
#line 355 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'OF';
            
            &$_tt_filter($output);
        };
        
        $output .=  " ";
#line 355 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get(['pageinfo', 0, 'totalitems', 0]);
        $output .=  "\n</span>\n";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'setting' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n	";
#line 389 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "\n		";
#line 388 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "\n			";
#line 387 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('content');
        $output .=  "\n		";
            $context->include('settingGroup', { 'content', $output }); 
        };
        
        $output .=  "	";
            $context->include('settingSection', { 'content', $output }); 
        };
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'addlink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 53 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdlink', { 'cmdtitle' => 'ADD_TO_PLAYLIST', 'cmdimage' => 'b_add.gif' });
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'contentcontainer' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n<div id=\"";
#line 161 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('listid') || 'browsedbList';
        $output .=  "\">";
#line 162 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('indent', [ 4 ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('content');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n</div>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'playlink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 46 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdlink', { 'cmdtitle' => 'PLAY', 'cmdimage' => 'b_play.gif' });
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'gallerycontainer' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "\n<div id=\"";
#line 167 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('listid') || 'browsedbList';
        $output .=  "\"><ul class=\"thumbwrap\">";
#line 168 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('indent', [ 4 ])
                      || $context->throw($context->error);
        
        $output .=  $stash->get('content');
            
            &$_tt_filter($output);
        };
        
        $output .=  "\n</ul></div>";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
        'browsecontrols' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
#line 230 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $stash->set('class', $stash->get('odd') ? 'odd" bgcolor="#d0d0d0' : 'even" bgcolor="#FFFFFF');
        $stash->set('target', 'status');
#line 231 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $stash->set('header', '1');
        $stash->set('width', $stash->get('cmdLinkIconSize'));
        $stash->set('height', $stash->get('cmdLinkIconSize'));
        $output .=  "	";
#line 245 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('showplayall')) {
        $output .=  "		";
#line 233 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "href=\"";
#line 233 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('playallhref');
        $output .=  "\"";
            $context->include('playlink', { 'noTarget' => 1, 'content', $output }); 
        };
        
        $output .=  "\n		";
#line 234 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
        $output .=  "href=\"";
#line 234 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('addallhref');
        $output .=  "\"";
            $context->include('addlink', { 'noTarget' => 1, 'content', $output }); 
        };
        
        $output .=  "\n	";
        }
        elsif ($stash->get('showdescend') && $stash->get('href')) {
#line 236 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
#line 236 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $stash->get('href');
            $context->include('descendlink', { 'content', $output }); 
        };
        
        $output .=  "		";
#line 240 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        if ($stash->get('showplay')) {
        $output .=  "			";
#line 238 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
#line 238 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdHRef', { 'cmdType' => 'play' });
            $context->include('playlink', { 'content', $output }); 
        };
        
        $output .=  "\n			";
#line 239 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
#line 239 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdHRef', { 'cmdType' => 'add' });
            $context->include('addlink', { 'content', $output }); 
        };
        
        }
        
        $output .=  "\n	";
        }
        else {
        $output .=  "\n		";
#line 242 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
#line 242 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdHRef', { 'cmdType' => 'play' });
            $context->include('playlink', { 'content', $output }); 
        };
        
        $output .=  "\n		";
#line 243 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        
        # WRAPPER
        $output .=  do {
            my $output = '';
#line 243 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('cmdHRef', { 'cmdType' => 'add' });
            $context->include('addlink', { 'content', $output }); 
        };
        
        $output .=  "\n		";
#line 244 "/usr/share/squeezeboxserver/HTML/EN/cmdwrappers"
        $output .=  $context->process('favoritescontrol');
        }
        
        $output .=  "\n	";
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
