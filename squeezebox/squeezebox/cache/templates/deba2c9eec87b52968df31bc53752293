#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1249312473',
        'name' => 'settings/header.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $stash->set('playerid', $stash->get('playerid') || $stash->get('player'));
    
    $output .=  "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\n<html>\n	<head>\n		<title>";
#line 11 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SQUEEZEBOX_SERVER';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</title>\n\n		<link rel=\"stylesheet\" type=\"text/css\" href=\"/html/ext/resources/css/ext-all.css?r=";
#line 13 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('revision');
    $output .=  "\" />\n		<link rel=\"stylesheet\" type=\"text/css\" href=\"";
#line 14 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('webroot');
    $output .=  "slimserver.css?r=";
#line 14 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('revision');
    $output .=  "\" />\n		<link rel=\"stylesheet\" type=\"text/css\" href=\"";
#line 15 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('webroot');
    $output .=  "skin.css?r=";
#line 15 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('revision');
    $output .=  "\" />\n\n		<script type=\"text/javascript\">";
#line 17 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $context->process('html/vars.js');
    $output .=  "</script>\n		<script type=\"text/javascript\" src=\"";
#line 18 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/js.html?r=";
#line 18 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('revision');
    $output .=  "\"></script>\n		<script type=\"text/javascript\">";
#line 19 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $context->process('html/SqueezeJS/Strings.js');
    $output .=  "</script>\n		<script type=\"text/javascript\" src=\"";
#line 20 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('webroot');
    $output .=  "html/Settings.js?r=";
#line 20 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('revision');
    $output .=  "\"></script>\n\n		<script type=\"text/javascript\">\n			";
#line 23 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $context->process('jsString', { 'id' => 'SETTINGS', 'jsId' => '' });
    $output .=  "\n			";
#line 24 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $context->process('jsString', { 'id' => 'ADVANCED_SETTINGS', 'jsId' => '' });
    $output .=  "\n			";
#line 25 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $context->process('jsString', { 'id' => 'SETUP_RESET_PLAYER', 'jsId' => 'reset_player' });
    $output .=  "\n			";
#line 26 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $context->process('jsString', { 'id' => 'SETUP_RESET_PLAYER_CONFIRM', 'jsId' => 'reset_player_confirm' });
    $output .=  "\n			";
#line 27 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $context->process('jsString', { 'id' => 'SETTINGS_CHANGED_CONFIRM', 'jsId' => '' });
    $output .=  "\n			";
#line 28 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $context->process('jsString', { 'id' => 'RESTART_NOW', 'jsId' => '' });
    $output .=  "\n			";
#line 29 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $context->process('jsString', { 'id' => 'RESTART_LATER', 'jsId' => '' });
    $output .=  "\n\n			// display player list if we're in the player settings";
#line 32 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $stash->set('pageId', '^'  . $stash->get('page')  . '$');
#line 32 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $stash->set('pageLink', $stash->get(['orderedLinks', 0, 'grep', [ $stash->get('pageId') ]]));
    
    $output .=  "\n			Ext.onReady(function(){\n				// overwrite default Ext Button layout\n				SqueezeJS.UI.buttonTemplate = new Ext.Template(\n					'<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\"><tbody><tr>',\n					'<td class=\"x-btn-ml\"></td><td class=\"x-btn-mc\"><button type=\"{0}\" style=\"padding:0\" class=\"x-btn-text {2}\"></button></td><td class=\"x-btn-mr\"></td>',\n					'</tr></tbody></table>'\n				);\n				SqueezeJS.UI.buttonTemplate.compile();	\n\n				SqueezeJS.UI.splitButtonTemplate = new Ext.Template(\n					'<table id=\"{4}\" cellspacing=\"0\" class=\"x-btn {3}\"><tbody class=\"{1}\">',\n					'<tr><td class=\"x-btn-ml\"><i>&#160;</i></td><td class=\"x-btn-mc\"><em class=\"{2}\" unselectable=\"on\"><button type=\"{0}\"></button></em></td><td class=\"x-btn-mr\"><i>&#160;</i></td></tr>',\n					'</tbody></table>'\n				);\n				SqueezeJS.UI.splitButtonTemplate.compile();\n\n				";
#line 77 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get('needsClient')) {
#line 53 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    # USE
    $stash->set('Clients',
                $context->plugin('Clients'));
#line 53 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $stash->set('players', $stash->get(['Clients', 0, 'get', [ 'id' ]]));
    $output .=  "\n\n					Settings.Page.initPlayerList([\n						";
#line 65 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('players');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'playerobj'} = $_tt_value;
    $output .=  "							{\n								id: \"";
#line 60 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get(['playerobj', 0, 'id', 0]);
    $output .=  "\",\n								name: \"";
#line 61 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get(['playerobj', 0, 'name', 0]);
    $output .=  "\",\n								model: \"";
#line 62 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get(['playerobj', 0, 'model', 0]);
    $output .=  "\",\n								current: ";
#line 63 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get(['playerobj', 0, 'id', 0]) eq $stash->get('playerid') ? 'true' : 'false';
    $output .=  "\n							}";
#line 64 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get(['loop', 0, 'last', 0]) ? '' : ',';
    $output .=  "\n						";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n					]);\n	\n					// remember the last loaded page - to be used when the player tab is selected next time\n					try {\n						parent.player = '";
#line 70 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('playerURI');
    $output .=  "';\n						parent.playerid = '";
#line 71 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('playerid');
        
        &$_tt_filter($output);
    };
    
    $output .=  "';\n						parent.SqueezeJS.setCookie('Squeezebox-playersettings', '";
#line 72 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get(['playersetup', 0, $stash->get('page'), 0]) || 'settings/player/basic.html?';
    $output .=  "');\n					}\n					catch(e) {}\n					playerid = '";
#line 75 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('playerid');
        
        &$_tt_filter($output);
    };
    
    $output .=  "';  \n	\n				";
    }
    
    $output .=  "\n\n				";
#line 95 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get(['pageLink', 0, 'size', 0]) > 0) {
    $output .=  "					Settings.Page.initSettingsList([";
#line 88 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('orderedLinks');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'link'} = $_tt_value;
    $output .=  "\n							{ \n								id: \"";
#line 83 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('link');
    $output .=  "\",\n								current: ";
#line 84 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('page') eq $stash->get('link') ? 'true' : 'false';
    $output .=  ",\n								url: \"";
#line 85 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('needsClient') ? $stash->get(['playersetup', 0, $stash->get('link'), 0]) : $stash->get(['additionalLinks', 0, 'setup', 0, $stash->get('link'), 0]);
    $output .=  "\",\n								name: \"";
#line 86 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('link');
        
        &$_tt_filter($output);
    };
    
    $output .=  "\"\n							}";
#line 87 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get(['loop', 0, 'last', 0]) ? '' : ',';
    $output .=  "\n						";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n					]);\n\n					";
#line 94 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if (! $stash->get('needsClient')) {
    $output .=  "\n						try { parent.SqueezeJS.setCookie('Squeezebox-advancedsettings', '";
#line 92 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get(['additionalLinks', 0, 'setup', 0, $stash->get('page'), 0]);
    $output .=  "'); }\n						catch(e) {}\n					";
    }
    
    }
    
    $output .=  "\n				Settings.Page.init();\n\n				var el;";
#line 105 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('validate');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'pref'} = $_tt_value;
#line 105 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get(['pref', 0, 'value', 0])) {
    $output .=  "\n					if (el = Ext.get('";
#line 101 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get(['pref', 0, 'key', 0]);
    $output .=  "')) {\n						el.on('blur', function(){ Settings.Page.validatePref('";
#line 102 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get(['pref', 0, 'key', 0]);
    $output .=  "', '";
#line 102 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('namespace');
    $output .=  "'); } );\n						el.addClass('canValidate');\n					}";
    }
    ;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n			});\n		</script>\n\n		";
#line 113 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get('pageHeaderScripts') && ! $stash->get('extJsScripts')) {
    $output .=  "\n			";
#line 110 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('pageHeaderScripts');
    $output .=  "\n		";
    }
    else {
    $output .=  "\n			";
#line 112 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('extJsScripts');
    $output .=  "\n		";
    }
    
    $output .=  "\n\n		<style>\n			html {\n				overflow: hidden;\n				background-color: white;\n			}\n";
#line 128 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get('debug')) {
    $output .=  "\n			.x-layout-panel-body { background: white; }\n			.x-btn-text, .x-btn button { color: black; }\n			.x-dlg .x-tabs-bottom .x-tabs-body {\n				background: white;\n				color: black;\n			}";
    }
    
    $output .=  "\n		</style>\n	</head>\n\n	<body class=\"";
#line 132 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('bodyClass') || 'settings';
    $output .=  "\">\n\n		";
#line 147 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get('needsClient') || ($stash->get(['pageLink', 0, 'size', 0]) > 0 && ! $stash->get('noSettingsList'))) {
    $output .=  "\n		<div class=\"buttonbar\" id=\"toolbar\">\n			<table>\n				<tr>";
#line 140 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get('needsClient')) {
    $output .=  "\n						<td><span id=\"playerSelector\"></span></td>\n					";
    }
    
#line 143 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if (! $stash->get('noSettingsList')) {
    $output .=  "\n						<td><span id=\"settingsSelector\"></span></td>\n					";
    }
    
    $output .=  "\n				<tr>\n			</table>\n		</div>\n		";
    }
    
    $output .=  "\n		<div id=\"content\" class=\"scrollingPanel\">\n\n			";
#line 156 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get('warning')) {
    $output .=  "\n				<div id=\"statusarea\" class=\"statusarea\">\n					";
#line 153 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('warning');
    $output .=  "\n					&nbsp;\n				</div>\n			";
    }
    
    $output .=  "\n\n			<form name=\"settingsForm\" id=\"settingsForm\" method=\"post\" action=\"";
#line 158 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('webroot');
#line 158 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('path');
#line 158 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get('playerid')) {
    $output .=  "?playerid=";
#line 158 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('uri')
                  || $context->throw($context->error);
    
    $output .=  $stash->get('playerid');
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "\">\n\n			<div id=\"settingsRegion\">\n\n				<input type=hidden value=\"1\" name=\"saveSettings\">\n				<input type=hidden value=\"0\" name=\"useAJAX\">\n				<input type=hidden value=\"";
#line 164 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('page');
    $output .=  "\" name=\"page\">\n				";
#line 165 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get('noSettingsList')) {
    $output .=  "<input type=hidden value=\"1\" name=\"noSettingsList\">";
    }
    
    $output .=  "\n				";
#line 166 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get('playerid')) {
    $output .=  "<input type=hidden value=\"";
#line 166 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('playerid');
    $output .=  "\" name=\"playerid\">";
    }
    
    $output .=  "\n				";
#line 167 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    if ($stash->get('player')) {
    $output .=  "<input type=hidden value=\"";
#line 167 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
    $output .=  $stash->get('player');
    $output .=  "\" name=\"player\">";
    }
    
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {
        'pluginLink' => sub {
            my $context = shift || die "template sub called without context\n";
            my $stash   = $context->stash;
            my $output  = '';
            my $_tt_error;
            
            eval { BLOCK: {
        $output .=  "	";
#line 5 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
        if ($stash->get('enabled') && $stash->get(['settings', 0, 'length', 0]) > 0) {
        $output .=  "\n		<a href=\"";
#line 4 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
        $output .=  $stash->get('webroot');
        $output .=  "settings/";
#line 4 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
        $output .=  $stash->get('settings');
        $output .=  "?player=";
#line 4 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
        $output .=  $stash->get('playerURI');
        $output .=  "&amp;playerid=";
#line 4 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('uri')
                      || $context->throw($context->error);
        
        $output .=  $stash->get('playerid');
            
            &$_tt_filter($output);
        };
        
        $output .=  "&amp;noSettingsList=1\">";
#line 4 "/usr/share/squeezeboxserver/HTML/Default/settings/header.html"
        
        # FILTER
        $output .=  do {
            my $output = '';
            my $_tt_filter = $context->filter('string')
                      || $context->throw($context->error);
        
        $output .=  'SETTINGS';
            
            &$_tt_filter($output);
        };
        
        $output .=  "</a>\n	";
        }
        
            } };
            if ($@) {
                $_tt_error = $context->catch($@, \$output);
                die $_tt_error unless $_tt_error->type eq 'return';
            }
        
            return $output;
        },
    },
});
