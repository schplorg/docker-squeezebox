#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1249312473',
        'name' => '/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 33 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # CAPTURE
    $stash->set('extJsScripts', do {
        my $output = '';
    $output .=  "\n	<script TYPE=\"text/javascript\">\n		Ext.onReady(function(){\n			var el = Ext.get('progressLink');\n			if (el) {\n				el.on('click', function(){\n					Settings.activate('INFORMATION');\n				})\n			}\n\n			// check for rescan, disable/enable rescan buttons if needed\n			new Ext.util.TaskRunner().start({\n				run: function(items) {\n					SqueezeJS.Controller.request({\n						params: [ '', [ \"rescan\", \"?\" ] ],\n			\n						success: function(response) {\n							response = Ext.util.JSON.decode(response.responseText);\n\n							if (response && response.result) {\n								items.each(function(item) {\n									item.dom.disabled = response.result['_rescan'] ? true : false;\n								});\n							}\n						}\n					})\n				},\n				args: [ Ext.select('.disableOnScan') ],\n				interval: 2000\n			});\n		});\n	</script>\n";
        $output;
    });
    
    $output .=  "\n";
#line 34 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $context->process('settings/header.html');
    $output .=  "\n\n	";
#line 44 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<select class=\"stdedit\" name=\"pref_language\" id=\"language\">\n\n		";
#line 41 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get(['languageoptions', 0, 'sort', 0]);
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n			<option ";
#line 40 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if ($stash->get(['prefs', 0, 'pref_language', 0]) eq $stash->get('option')) {
    $output .=  "selected=\"selected\" ";
    }
    
    $output .=  "value=\"";
#line 40 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get('option');
    $output .=  "\">";
#line 40 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['languageoptions', 0, $stash->get('option'), 0]);
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "		\n		</select>\n	";
        $context->include('setting', { 'title' => 'SETUP_LANGUAGE', 'desc' => 'SETUP_LANGUAGE_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 50 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		";
#line 49 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			<input type=\"text\" class=\"stdedit\" name=\"pref_libraryname\" id=\"libraryname\" value=\"";
#line 48 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('html')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['prefs', 0, 'pref_libraryname', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" size=\"40\">\n		";
        $context->include('settingGroup', { 'title' => 'SETUP_LIBRARY_NAME', 'desc' => 'SETUP_LIBRARY_NAME_DESC', 'content', $output }); 
    };
    
    $output .=  "\n	";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 84 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<table border=\"0\" cellspacing=\"0\">\n			<tr>\n				<th>";
#line 55 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'FOLDER';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</th>\n				<th>";
#line 56 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'MUSIC';
        
        &$_tt_filter($output);
    };
    
    $output .=  "&nbsp;&nbsp;</th>\n				";
#line 57 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if (! $stash->get('noimage')) {
    $output .=  "<th>";
#line 57 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'PICTURES';
        
        &$_tt_filter($output);
    };
    
    $output .=  "&nbsp;&nbsp;</th>";
    }
    
    $output .=  "\n				";
#line 58 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if (! $stash->get('novideo')) {
    $output .=  "<th>";
#line 58 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'VIDEO';
        
        &$_tt_filter($output);
    };
    
    $output .=  "</th>";
    }
    
    $output .=  "\n				<th>&nbsp;</th>\n			</tr>\n\n		";
#line 80 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = $stash->get('mediadirs');
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'mediadir'} = $_tt_value;
    $output .=  "\n			<tr>\n				<td class=\"";
#line 64 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get('odd') ? 'odd' : 'even';
    $output .=  "\">\n					<input type=\"text\" class=\"stdedit selectFolder\" name=\"pref_mediadirs";
#line 65 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\" id=\"mediadirs";
#line 65 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\" value=\"";
#line 65 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['mediadir', 0, 'path', 0]);
    $output .=  "\" size=\"40\"><br/>&nbsp;\n				</td>\n				<td class=\"";
#line 67 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get('odd') ? 'odd' : 'even';
    $output .=  "\" align=\"center\">\n					<input type=checkbox ";
#line 68 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if (! $stash->get(['mediadir', 0, 'audio', 0])) {
    $output .=  "checked=\"1\" ";
    }
    
    $output .=  " class=\"stdedit\" name=\"pref_ignoreInAudioScan";
#line 68 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\" id=\"ignoreInAudioScan";
#line 68 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\" value=\"1\" />\n				</td>\n				";
#line 72 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if (! $stash->get('noimage')) {
    $output .=  "<td class=\"";
#line 70 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get('odd') ? 'odd' : 'even';
    $output .=  "\" align=\"center\">\n					<input type=checkbox ";
#line 71 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if (! $stash->get(['mediadir', 0, 'image', 0])) {
    $output .=  "checked=\"1\" ";
    }
    
    $output .=  " class=\"stdedit\" name=\"pref_ignoreInImageScan";
#line 71 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\" id=\"ignoreInImageScan";
#line 71 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\" value=\"1\" />\n				</td>";
    }
    
    $output .=  "\n				";
#line 75 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if (! $stash->get('novideo')) {
    $output .=  "<td class=\"";
#line 73 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get('odd') ? 'odd' : 'even';
    $output .=  "\" align=\"center\">\n					<input type=checkbox ";
#line 74 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if (! $stash->get(['mediadir', 0, 'video', 0])) {
    $output .=  "checked=\"1\" ";
    }
    
    $output .=  " class=\"stdedit\" name=\"pref_ignoreInVideoScan";
#line 74 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\" id=\"ignoreInVideoScan";
#line 74 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\" value=\"1\" />\n				</td>";
    }
    
    $output .=  "\n				<td class=\"";
#line 76 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get('odd') ? 'odd' : 'even';
    $output .=  "\" align=\"center\" style=\"padding: 0 5px\">\n					";
#line 77 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if ($stash->get(['mediadir', 0, 'path', 0])) {
    $output .=  "<input name=\"pref_rescan_mediadir";
#line 77 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['loop', 0, 'index', 0]);
    $output .=  "\" type=submit value=\"";
#line 77 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SETUP_RESCAN_BUTTON';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" class=\"stdclick disableOnScan\" ";
#line 77 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if ($stash->get('scanning')) {
    $output .=  "disabled";
    }
    
    $output .=  " />";
    }
    
    $output .=  "\n				</td>\n			</tr>\n			";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "\n\n			<tr style=\"height: 5px;\"><td class=\"";
#line 82 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get('odd') ? 'odd' : 'even';
    $output .=  "\" colspan=\"3\"></td></tr>\n		</table>\n	";
        $context->include('setting', { 'title' => 'SETUP_MEDIADIRS', 'desc' => 'SETUP_MEDIADIRS_DESC', 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 90 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		";
#line 89 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n			<input type=\"text\" class=\"stdedit selectFolder\" name=\"pref_playlistdir\" id=\"playlistdir\" value=\"";
#line 88 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['prefs', 0, 'pref_playlistdir', 0]);
    $output .=  "\" size=\"40\">\n		";
        $context->include('settingGroup', { 'title' => 'SETUP_PLAYLISTDIR', 'desc' => 'SETUP_PLAYLISTDIR_DESC', 'content', $output }); 
    };
    
    $output .=  "\n	";
        $context->include('settingSection', { 'content', $output }); 
    };
    
    $output .=  "\n\n	";
#line 106 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # WRAPPER
    $output .=  do {
        my $output = '';
    $output .=  "\n		<select class=\"stdedit disableOnScan\" name=\"pref_rescantype\" id=\"rescantype\" ";
#line 93 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if ($stash->get('scanning')) {
    $output .=  "disabled";
    }
    
    $output .=  ">\n\n		";
#line 101 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FOREACH 
    do {
        my ($_tt_value, $_tt_error, $_tt_oldloop);
        my $_tt_list = { '1rescan' => 'SETUP_STANDARDRESCAN', '2wipedb' => 'SETUP_WIPEDB', '3playlist' => 'SETUP_PLAYLISTRESCAN'  };
        
        unless (UNIVERSAL::isa($_tt_list, 'Template::Iterator')) {
            $_tt_list = Template::Config->iterator($_tt_list)
                || die $Template::Config::ERROR, "\n"; 
        }
    
        ($_tt_value, $_tt_error) = $_tt_list->get_first();
        eval { $_tt_oldloop = $stash->get('loop') };
        $stash->set('loop', $_tt_list);
        eval {
    LOOP:   while (! $_tt_error) {
                $stash->{'option'} = $_tt_value;
    $output .=  "\n			<option ";
#line 100 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if ($stash->get('scanning') eq $stash->get(['option', 0, 'value', 0])) {
    $output .=  "selected ";
    }
    
    $output .=  "value=\"";
#line 100 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get(['option', 0, 'key', 0]);
    $output .=  "\">";
#line 100 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  $stash->get(['option', 0, 'value', 0]);
        
        &$_tt_filter($output);
    };
    
    $output .=  "</option>";;
                ($_tt_value, $_tt_error) = $_tt_list->get_next();
            }
        };
        $stash->set('loop', $_tt_oldloop);
        die $@ if $@;
        $_tt_error = 0 if $_tt_error && $_tt_error eq Template::Constants::STATUS_DONE;
        die $_tt_error if $_tt_error;
    };
    
    $output .=  "		\n		</select>\n		<input name=\"pref_rescan\" type=\"submit\" class=\"stdclick disableOnScan\" value=\"";
#line 104 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SETUP_RESCAN_BUTTON';
        
        &$_tt_filter($output);
    };
    
    $output .=  "\" ";
#line 104 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if ($stash->get('scanning')) {
    $output .=  "disabled";
    }
    
    $output .=  "><br/><br/>\n		<a id=\"progressLink\" href=\"";
#line 105 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get('webroot');
    $output .=  "settings/server/status.html?player=";
#line 105 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $stash->get('playerid');
    $output .=  "\">";
#line 105 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    if ($stash->get('scanning')) {
#line 105 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SETUP_VIEW_SCANNING';
        
        &$_tt_filter($output);
    };
    
    }
    else {
#line 105 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    
    # FILTER
    $output .=  do {
        my $output = '';
        my $_tt_filter = $context->filter('string')
                  || $context->throw($context->error);
    
    $output .=  'SETUP_VIEW_NOT_SCANNING';
        
        &$_tt_filter($output);
    };
    
    }
    
    $output .=  "</a>\n	";
        $context->include('setting', { 'title' => 'SETUP_RESCAN', 'desc' => 'SETUP_RESCAN_DESC', 'content', $output }); 
    };
    
    $output .=  "\n	\n";
#line 108 "/usr/share/squeezeboxserver/HTML/EN/settings/server/basic.html"
    $output .=  $context->process('settings/footer.html');
    $output .=  "\n";
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
