#------------------------------------------------------------------------
# Compiled template generated by the Template Toolkit version 2.21
#------------------------------------------------------------------------

Template::Document->new({
    METADATA => {
        'modtime' => '1249312473',
        'name' => '/usr/share/squeezeboxserver/HTML/Default/html/js-main.html',
    },
    BLOCK => sub {
        my $context = shift || die "template sub called without context\n";
        my $stash   = $context->stash;
        my $output  = '';
        my $_tt_error;
        
        eval { BLOCK: {
#line 1 "/usr/share/squeezeboxserver/HTML/Default/html/js-main.html"
    if ($stash->get('debug')) {
#line 1 "/usr/share/squeezeboxserver/HTML/Default/html/js-main.html"
    $output .=  $context->include('html/ext/adapter/ext/ext-base.js');
#line 1 "/usr/share/squeezeboxserver/HTML/Default/html/js-main.html"
    $output .=  $context->include('html/ext/ext-all-debug.js');
    }
    else {
#line 1 "/usr/share/squeezeboxserver/HTML/Default/html/js-main.html"
    $output .=  $context->include('html/ext/ext-main.js');
    }
    
#line 1 "/usr/share/squeezeboxserver/HTML/Default/html/js-main.html"
    if ($stash->get('hasMediaSupport')) {
#line 1 "/usr/share/squeezeboxserver/HTML/Default/html/js-main.html"
    $output .=  $context->include('html/lightbox/lightbox.js');
    }
    
#line 1 "/usr/share/squeezeboxserver/HTML/Default/html/js-main.html"
    $output .=  $context->include('html/SqueezeJS/Base.js');
#line 1 "/usr/share/squeezeboxserver/HTML/Default/html/js-main.html"
    $output .=  $context->include('html/SqueezeJS/UI.js');
#line 1 "/usr/share/squeezeboxserver/HTML/Default/html/js-main.html"
    $output .=  $context->include('html/Main.js');
#line 1 "/usr/share/squeezeboxserver/HTML/Default/html/js-main.html"
    $output .=  $stash->get('additionalJS');
    
        } };
        if ($@) {
            $_tt_error = $context->catch($@, \$output);
            die $_tt_error unless $_tt_error->type eq 'return';
        }
    
        return $output;
    },
    DEFBLOCKS => {

    },
});
