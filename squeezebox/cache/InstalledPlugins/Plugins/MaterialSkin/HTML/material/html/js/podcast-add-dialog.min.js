Vue.component("lms-podcast-add-dialog",{template:'\n<v-dialog v-model="show" v-if="show" persistent scrollable width="600">\n <v-card>\n  <v-card-title>{{i18n("Add podcast")}}</v-card-title>\n  <v-form ref="form" v-model="valid" lazy-validation>\n   <v-list two-line>\n    <v-list-tile>\n     <v-list-tile-content>\n      <v-text-field clearable v-if="show" :label="i18n(\'Name\')" v-model="name" class="lms-search"></v-text-field>\n     </v-list-tile-content>\n    </v-list-tile>\n    <v-list-tile>\n     <v-list-tile-content>\n      <v-text-field clearable autofocus :label="i18n(\'URL\')" v-model="url" class="lms-search"></v-text-field>\n     </v-list-tile-content>\n     <v-list-tile-action><v-btn flat @click="validate">{{i18n(\'Validate\')}}</v-btn></v-list-tile-action>\n    </v-list-tile>\n    <v-list-tile v-if="error">\n     <p style="color:red">{{error}}</p>\n    </v-list-tile>\n   </v-list>\n  </v-form>\n  <v-card-actions>\n   <v-spacer></v-spacer>\n   <v-btn flat @click.native="cancel()">{{i18n(\'Cancel\')}}</v-btn>\n   <v-btn flat @click.native="add()">{{i18n(\'Add\')}}</v-btn>\n  </v-card-actions>\n </v-card>\n</v-dialog>\n',
props:[],data:function(){return{valid:!1,show:!1,name:"",url:"",item:void 0,error:void 0}},mounted:function(){bus.$on("podcastadd.open",function(){this.name=this.url="";this.show=!0}.bind(this));bus.$on("esc",function(){"podcastadd"==this.$store.state.activeDialog&&(this.show=!1)}.bind(this))},methods:{cancel:function(){this.show=!1;this.cancelErrorTimer();this.parser=void 0},validate:function(){var a=this,b=this.url?this.url.trim():"";4<b.length?(this.error=void 0,this.cancelErrorTimer(),axios.get(b).then(function(b){a.parseResp(b.data)}).catch(function(c){axios.get("https://cors-anywhere.herokuapp.com/"+
b).then(function(b){a.parseResp(b.data)}).catch(function(b){a.showError(b)})})):this.showError(i18n("Invalid URL"))},parseResp:function(a){try{void 0==this.parser&&(this.parser=new DOMParser),this.name=this.parser.parseFromString(a,"text/xml").getElementsByTagName("title")[0].childNodes[0].nodeValue}catch(b){this.showError(i18n("Failed to parse feed"))}},add:function(){var a=this,b=this.url?this.url.trim():"",c=this.name?this.name.trim():"";1>b.length||1>c.length||lmsCommand("",["material-skin","add-podcast",
"url:"+b,"name:"+c]).then(function(b){bus.$emit("refreshList",SECTION_PODCASTS);a.show=!1}).catch(function(b){a.showError(i18n("Failed add podcast"))})},showError:function(a){this.error=a;this.cancelErrorTimer();this.errorTimer=setTimeout(function(){this.errorTimer=this.error=void 0}.bind(this),2500)},cancelErrorTimer:function(){void 0!=this.errorTimer&&(this.errorTimer=void 0)},i18n:function(a){return this.show?i18n(a):a}},watch:{show:function(a){this.$store.commit("dialogOpen",{name:"podcastadd",
shown:a})}},beforeDestroy:function(){this.cancelErrorTimer()}});
